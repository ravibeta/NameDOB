//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace NameDOB.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class NameDOBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new NameDOBEntities object using the connection string found in the 'NameDOBEntities' section of the application configuration file.
        /// </summary>
        public NameDOBEntities() : base("name=NameDOBEntities", "NameDOBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new NameDOBEntities object.
        /// </summary>
        public NameDOBEntities(string connectionString) : base(connectionString, "NameDOBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new NameDOBEntities object.
        /// </summary>
        public NameDOBEntities(EntityConnection connection) : base(connection, "NameDOBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Individual> Individuals
        {
            get
            {
                if ((_Individuals == null))
                {
                    _Individuals = base.CreateObjectSet<Individual>("Individuals");
                }
                return _Individuals;
            }
        }
        private ObjectSet<Individual> _Individuals;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Individuals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIndividuals(Individual individual)
        {
            base.AddObject("Individuals", individual);
        }

        #endregion
    }
    

    #endregion
  
}
